package org.usfirst.frc.team6317.robot.commands;

import org.usfirst.frc.team6317.robot.Robot;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

public class DriveFor extends Command{
	
	private double neededLeftPosition, neededRightPosition;
	private final double speed, inches;
	
	public DriveFor(double inches) {
		this.requires(Robot.DriveSubsystem);
		this.requires(Robot.SensorSubsystem);
		this.speed = 0.5;
		this.inches = inches;
	}
	
	public DriveFor(double inches, double speed) {
		this.requires(Robot.DriveSubsystem);
		this.requires(Robot.SensorSubsystem);
		this.speed = speed;
		this.inches = inches;
	}
	
	@Override
	protected void initialize() {
		double leftPos = Robot.SensorSubsystem.getEncoderPosition(Robot.SensorSubsystem.leftEncoder);
		double rightPos = Robot.SensorSubsystem.getEncoderPosition(Robot.SensorSubsystem.rightEncoder);
		neededLeftPosition = leftPos + Robot.SensorSubsystem.getNeededEncoders(this.inches);
		neededRightPosition = rightPos + Robot.SensorSubsystem.getNeededEncoders(this.inches);
		Robot.SensorSubsystem.leftEncoder.reset();
		Robot.SensorSubsystem.rightEncoder.reset();
		if (!isFinished()) Robot.DriveSubsystem.drive(this.speed);
	}
	
	@Override
	protected void execute() {
		SmartDashboard.putNumber("Left Encoder", Robot.SensorSubsystem.getEncoderPosition(Robot.SensorSubsystem.leftEncoder));
		SmartDashboard.putNumber("Needed Left", this.neededLeftPosition);
		SmartDashboard.putNumber("Right Encoder", Robot.SensorSubsystem.getEncoderPosition(Robot.SensorSubsystem.rightEncoder));
		SmartDashboard.putNumber("Needed Right", this.neededRightPosition);
	}

	@Override
	protected boolean isFinished() {
		// TODO Auto-generated method stub
		double leftPos = Robot.SensorSubsystem.getEncoderPosition(Robot.SensorSubsystem.leftEncoder);
		double rightPos = Robot.SensorSubsystem.getEncoderPosition(Robot.SensorSubsystem.rightEncoder);
		return leftPos > this.neededLeftPosition && rightPos > this.neededRightPosition;
	}
	
	@Override
	protected void end() {
		Robot.DriveSubsystem.stop();
	}
}
